<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hack Life of OpenFibers]]></title>
  <link href="http://openfibers.github.io/atom.xml" rel="self"/>
  <link href="http://openfibers.github.io/"/>
  <updated>2020-06-24T18:32:16+08:00</updated>
  <id>http://openfibers.github.io/</id>
  <author>
    <name><![CDATA[OpenFibers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[diff: /Manifest.lock: No such file or directory: PODS_ROOT not defined]]></title>
    <link href="http://openfibers.github.io/blog/2020/06/24/pods-root-not-found/"/>
    <updated>2020-06-24T18:25:29+08:00</updated>
    <id>http://openfibers.github.io/blog/2020/06/24/pods-root-not-found</id>
    <content type="html"><![CDATA[<p>WeexSDK 增加 pods 依赖的时候提示：</p>

<p>diff: /Manifest.lock: No such file or directory</p>

<p>查看 shell script：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diff <span class="s2">&quot;${PODS_PODFILE_DIR_PATH}/Podfile.lock&quot;</span> <span class="s2">&quot;${PODS_ROOT}/Manifest.lock&quot;</span> &gt; /dev/null
</span></code></pre></td></tr></table></div></figure>


<p>echo 发现 PODS_ROOT 为空，导致 diff 右值传递为 &lsquo;/Manifest.lock&#8217;，所以文件找不到。</p>

<p>查看 <code>Pods-WeexSDK.debug.xcconfig</code> 中对 <code>PODS_ROOT</code> 有定义：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">PODS_ROOT</span> <span class="o">=</span> <span class="k">${</span><span class="nv">SRCROOT</span><span class="k">}</span>/Pods
</span></code></pre></td></tr></table></div></figure>


<p>而且 project Info -> Configuration 下面指定了正确的 xcconfig。怀疑 PODS_ROOT 被某优先级更高的设置覆盖为空了。</p>

<p>全局搜索 <code>PODS_ROOT</code>，发现 target -> Build Settings -> User Defined 中对 <code>PODS_ROOT</code> 设置了空值。删除后问题解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++ 10分钟速成]]></title>
    <link href="http://openfibers.github.io/blog/2020/05/07/cpp-c++-quick-learn_in_10_min/"/>
    <updated>2020-05-07T10:33:56+08:00</updated>
    <id>http://openfibers.github.io/blog/2020/05/07/cpp-c++-quick-learn_in_10_min</id>
    <content type="html"><![CDATA[<h2>IDE 选择</h2>

<h3>PC</h3>

<p>MinGW<br/>
VSCode</p>

<h3>macOS</h3>

<p>CLion (花钱)<br/>
Xcode</p>

<p>文章例子编译环境：<br/>
方言： GNU++14[-std=gnu++14]
Standard library：libc++ (LLVM C++ standard library with C++11 support)</p>

<h2>1. 指针</h2>

<h4>声明</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">food</span> <span class="o">=</span> <span class="s">&quot;Pizza&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">string</span><span class="o">*</span> <span class="n">ptr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">food</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">food</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">food</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ptr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">ptr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ptr</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">food</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>执行结果</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Pizza</span>
</span><span class='line'><span class="mh">0x7ffeefbff560</span>
</span><span class='line'><span class="mh">0x7ffeefbff560</span>
</span><span class='line'><span class="mh">0x7ffeefbff558</span>
</span><span class='line'><span class="mi">8</span>
</span><span class='line'><span class="mi">24</span>
</span></code></pre></td></tr></table></div></figure>


<h4>类型</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">food</span>  <span class="n">std</span><span class="o">::</span><span class="n">__1</span><span class="o">::</span><span class="n">string</span>    <span class="s">&quot;Pizza&quot;</span>  
</span><span class='line'><span class="n">ptr</span>   <span class="n">std</span><span class="o">::</span><span class="n">__1</span><span class="o">::</span><span class="n">string</span> <span class="o">*</span>  <span class="s">&quot;Pizza&quot;</span> <span class="mh">0x00007ffeefbff560</span>
</span></code></pre></td></tr></table></div></figure>


<h4>内存 (macOS, big-endian)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="mh">0x7ffeefbff558</span>          <span class="mh">0x7ffeefbff560</span>
</span><span class='line'><span class="err">⬇️</span>                      <span class="err">⬇️</span>
</span><span class='line'><span class="mi">60</span> <span class="n">F5</span> <span class="n">BF</span> <span class="n">EF</span> <span class="n">FE</span> <span class="mf">7F</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mi">0</span><span class="n">A</span> <span class="mi">50</span> <span class="mi">69</span> <span class="mi">7</span><span class="n">A</span> <span class="mi">7</span><span class="n">A</span> <span class="mi">61</span> <span class="mo">00</span> <span class="mo">00</span>
</span><span class='line'><span class="err">`</span>  <span class="err">õ</span>  <span class="err">¿</span>  <span class="err">ï</span>  <span class="err">þ</span>  <span class="err"></span><span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>     <span class="n">P</span>  <span class="n">i</span>  <span class="n">z</span>  <span class="n">z</span>  <span class="n">a</span>  <span class="p">.</span>  <span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span>
</span><span class='line'><span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>  <span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h2>2. 引用</h2>

<h4>声明</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="nf">swapNums</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="o">&amp;</span><span class="n">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;address of ref &quot;</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">z</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'>    <span class="n">y</span> <span class="o">=</span> <span class="n">z</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">firstNum</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">secondNum</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Before swap: &quot;</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">firstNum</span>  <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">secondNum</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;address of num &quot;</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">firstNum</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">secondNum</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Call the function, which will change the values of firstNum and secondNum</span>
</span><span class='line'>    <span class="n">swapNums</span><span class="p">(</span><span class="n">firstNum</span><span class="p">,</span> <span class="n">secondNum</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;After swap: &quot;</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">firstNum</span>  <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">secondNum</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">firstNum</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">secondNum</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>执行结果</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Before</span> <span class="nl">swap</span><span class="p">:</span>
</span><span class='line'><span class="mi">10</span> <span class="mi">20</span>
</span><span class='line'><span class="n">address</span> <span class="n">of</span> <span class="n">num</span> <span class="mh">0x7ffeefbff578</span> <span class="mh">0x7ffeefbff574</span>
</span><span class='line'><span class="n">address</span> <span class="n">of</span> <span class="n">ref</span> <span class="mh">0x7ffeefbff578</span> <span class="mh">0x7ffeefbff574</span>
</span><span class='line'><span class="n">After</span> <span class="nl">swap</span><span class="p">:</span>
</span><span class='line'><span class="mi">20</span> <span class="mi">10</span>
</span><span class='line'><span class="mi">4</span>
</span><span class='line'><span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<h4>类型</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">firstNum</span>    <span class="kt">int</span>     <span class="mi">10</span>
</span><span class='line'><span class="n">secondNum</span>   <span class="kt">int</span>     <span class="mi">20</span>
</span><span class='line'><span class="n">x</span>           <span class="kt">int</span> <span class="o">&amp;</span>   <span class="mh">0x00007ffeefbff578</span>
</span><span class='line'><span class="n">y</span>            <span class="kt">int</span> <span class="o">&amp;</span>   <span class="mh">0x00007ffeefbff574</span>
</span></code></pre></td></tr></table></div></figure>


<h4>内存 (macOS, big-endian)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="mh">0x7ffeefbff574</span>  <span class="mh">0x00007ffeefbff578</span>
</span><span class='line'><span class="err">⬇</span>              <span class="err">⬇️️</span>
</span><span class='line'><span class="mi">14</span>  <span class="mo">00</span>  <span class="mo">00</span>  <span class="mo">00</span>  <span class="mi">0</span><span class="n">A</span>  <span class="mo">00</span>  <span class="mo">00</span>  <span class="mo">00</span>
</span><span class='line'><span class="mi">20</span>  <span class="mi">0</span>   <span class="mi">0</span>   <span class="mi">0</span>   <span class="mi">10</span>  <span class="mi">0</span>   <span class="mi">0</span>   <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>3. OOP: Contructor and Initialize</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MyClass</span> <span class="p">{</span>     <span class="c1">// The class</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>           <span class="c1">// Access specifier</span>
</span><span class='line'>    <span class="n">MyClass</span><span class="p">()</span> <span class="p">{</span>     <span class="c1">// Constructor</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello World!&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">MyClass</span> <span class="n">myObj</span><span class="p">;</span>    <span class="c1">// Create an object of MyClass (this will call the constructor)</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>执行结果</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Hello</span> <span class="n">World</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4. 方法默认参数</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="nf">myFunction</span><span class="p">(</span><span class="n">string</span> <span class="n">country</span> <span class="o">=</span> <span class="s">&quot;Norway&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">country</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">myFunction</span><span class="p">(</span><span class="s">&quot;Sweden&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">myFunction</span><span class="p">(</span><span class="s">&quot;India&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">myFunction</span><span class="p">();</span>
</span><span class='line'>  <span class="n">myFunction</span><span class="p">(</span><span class="s">&quot;USA&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Sweden</span>
</span><span class='line'><span class="c1">// India</span>
</span><span class='line'><span class="c1">// Norway</span>
</span><span class='line'><span class="c1">// USA</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5. 继承</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Vehicle</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">brand</span> <span class="o">=</span> <span class="s">&quot;Ford&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">honk</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Tuut, tuut! </span><span class="se">\n</span><span class="s">&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Derived class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Car</span><span class="o">:</span> <span class="k">public</span> <span class="n">Vehicle</span> <span class="p">{</span>  <span class="c1">// 继承方式：public</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">model</span> <span class="o">=</span> <span class="s">&quot;Mustang&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">Car</span> <span class="n">myCar</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myCar</span><span class="p">.</span><span class="n">honk</span><span class="p">();</span>
</span><span class='line'>  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">myCar</span><span class="p">.</span><span class="n">brand</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">myCar</span><span class="p">.</span><span class="n">model</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>执行结果</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Tuut</span><span class="p">,</span> <span class="n">tuut</span><span class="o">!</span>
</span><span class='line'><span class="n">Ford</span> <span class="n">Mustang</span>
</span></code></pre></td></tr></table></div></figure>


<h4>继承权限</h4>

<p>子类中直接继承获得的父类方法，访问权限遵循最小权限原则。<br/>
权限范围： private &lt; protected &lt; public
继承获得的方法，其权限 = min(父类方法访问权限，继承方式)
举例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Vehicle</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">brand</span> <span class="o">=</span> <span class="s">&quot;Ford&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">honk</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Tuut, tuut! </span><span class="se">\n</span><span class="s">&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Derived class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Car</span><span class="o">:</span> <span class="k">private</span> <span class="n">Vehicle</span> <span class="p">{</span>  <span class="c1">// 继承方式为 private</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">model</span> <span class="o">=</span> <span class="s">&quot;Mustang&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">Car</span> <span class="n">myCar</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myCar</span><span class="p">.</span><span class="n">honk</span><span class="p">();</span>  <span class="c1">// 子类权限 = min(public, private)，也就是 private. 这里会产生编译错误</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>6. 多重继承</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in parent class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Another base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myOtherFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in another class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Derived class </span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyChildClass</span><span class="o">:</span> <span class="k">public</span> <span class="n">MyClass</span><span class="p">,</span> <span class="k">public</span> <span class="n">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">MyChildClass</span> <span class="n">myObj</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myFunction</span><span class="p">();</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myOtherFunction</span><span class="p">();</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>如果 MyClass 和 MyOtherClass 有同名函数，则允许继承但不允许调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in parent class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Another base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in another class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myOtherFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in another class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Derived class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyChildClass</span><span class="o">:</span> <span class="k">public</span> <span class="n">MyClass</span><span class="p">,</span> <span class="k">public</span> <span class="n">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">MyChildClass</span> <span class="n">myObj</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myFunction</span><span class="p">();</span>  <span class="c1">// err at compile time</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myOtherFunction</span><span class="p">();</span>  <span class="c1">// can execute properly</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>多重继承时的权限修饰符</h4>

<p>和单继承的权限修饰同理，遵循权限相乘规则。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in parent class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Another base class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">myOtherFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Some content in another class.&quot;</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Derived class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyChildClass</span><span class="o">:</span> <span class="k">private</span> <span class="n">MyClass</span><span class="p">,</span> <span class="k">public</span> <span class="n">MyOtherClass</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">MyChildClass</span><span class="p">(){</span>
</span><span class='line'>      <span class="n">myFunction</span><span class="p">();</span>  <span class="c1">// can execute properly</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">MyChildClass</span> <span class="n">myObj</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myFunction</span><span class="p">();</span>  <span class="c1">// 权限 = min(public, private) 也就是 private，err at compile time</span>
</span><span class='line'>  <span class="n">myObj</span><span class="p">.</span><span class="n">myOtherFunction</span><span class="p">();</span>  <span class="c1">// can execute properly</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pytorch Walkthrough on macOS]]></title>
    <link href="http://openfibers.github.io/blog/2020/03/05/pytorch-walkthrough/"/>
    <updated>2020-03-05T14:25:58+08:00</updated>
    <id>http://openfibers.github.io/blog/2020/03/05/pytorch-walkthrough</id>
    <content type="html"><![CDATA[<h1>Env</h1>

<p>macOS 10.15 | python 3.8.2 | torch 1.4.0 | torchvision 0.5.0</p>

<h1>Install via pip</h1>

<p>macOS binary 安装不支持 CUDA，如果需要 CUDA 请翻阅官网 install via source 安装指引。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pip3 install torch
</span><span class='line'>pip3 install torchvision
</span></code></pre></td></tr></table></div></figure>


<p>安装成功后发现报错：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt;&gt;&gt; import torch
</span><span class='line'>toTraceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>  File <span class="s2">&quot;&lt;stdin&gt;&quot;</span>, line 1, in &lt;module&gt;
</span><span class='line'>  File <span class="s2">&quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/torch/__init__.py&quot;</span>, line 97, in &lt;module&gt;
</span><span class='line'>    from torch._C import *
</span><span class='line'>ImportError: dlopen<span class="o">(</span>/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/torch/_C.cpython-38-darwin.so, 9<span class="o">)</span>: Library not loaded: @rpath/libc++.1.dylib
</span><span class='line'>  Referenced from: /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/torch/_C.cpython-38-darwin.so
</span><span class='line'>  Reason: image not found
</span></code></pre></td></tr></table></div></figure>


<p><code>libc++.1.dylib</code> 在 <code>/usr/lib</code> 下，使用 <code>install_name_tool</code> 解决:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>install_name_tool -add_rpath /usr/lib /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/torch/_C.cpython-38-darwin.so
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hands-on-ml-readle]]></title>
    <link href="http://openfibers.github.io/blog/2019/09/17/hands-on-ml-readle/"/>
    <updated>2019-09-17T23:39:52+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/09/17/hands-on-ml-readle</id>
    <content type="html"><![CDATA[<h3>下载数据集</h3>

<p>from sklearn.datasets import fetch_openml</p>

<p>mnist = fetch_openml(&lsquo;mnist_784&rsquo;, data_home=&lsquo;./&rsquo;)  # downloaded from www.openml.org
print(mnist)</p>

<p>如果提示 SSL: CERTIFICATE_VERIFY_FAILED，需要先更新证书：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /Applications/Python\ 3.7/Install\ Certificates.command</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复 _adjustContentOffsetIfNecessary 导致 scroll view 闪动问题]]></title>
    <link href="http://openfibers.github.io/blog/2019/09/16/fix-adjustcontentoffsetifnecessary-make-scroll-view-blink/"/>
    <updated>2019-09-16T19:50:22+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/09/16/fix-adjustcontentoffsetifnecessary-make-scroll-view-blink</id>
    <content type="html"><![CDATA[<h3>方法一</h3>

<p>继承 scroll view，override _adjustContentOffsetIfNecessary 到空方法。</p>

<h3>方法二</h3>

<p>swizz scroll view _adjustContentOffsetIfNecessary 到其 category 的一个空方法中。</p>

<h3>方法三</h3>

<p>对应 UIViewController 的 automaticallyAdjustsScrollViewInsets 设置为 NO。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitbook install and use]]></title>
    <link href="http://openfibers.github.io/blog/2019/09/14/gitbook-install-and-use/"/>
    <updated>2019-09-14T13:01:59+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/09/14/gitbook-install-and-use</id>
    <content type="html"><![CDATA[<h3>首先安装 Node.js</h3>

<p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p>

<h3>然后安装 Gitbook</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo npm install -g gitbook-cli</span></code></pre></td></tr></table></div></figure>


<h3>再安装 Calibre</h3>

<p>Gitbook 的电子书格式转换需要调用 Calibre 的命令行工具。</p>

<p><a href="https://calibre-ebook.com">https://calibre-ebook.com</a></p>

<p>然后：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert ~/bin</span></code></pre></td></tr></table></div></figure>


<h3>最后切换到书的 git 目录下</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gitbook mobi ./ ./book-name.mobi</span></code></pre></td></tr></table></div></figure>


<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[单页面隐藏 Navigation Bar，同时保持右滑手势退出页面的终极方案]]></title>
    <link href="http://openfibers.github.io/blog/2019/08/19/hide-navigation-bar-with-pop-gesture/"/>
    <updated>2019-08-19T15:15:43+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/08/19/hide-navigation-bar-with-pop-gesture</id>
    <content type="html"><![CDATA[<h3>1. 隐藏 navigation bar</h3>

<p>在需要隐藏 navigation bar 的 view controller 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewWillAppear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">viewWillAppear</span><span class="p">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">hideNavBar</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidDisappear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">viewDidDisappear</span><span class="p">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">showNavBar</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">hideNavBar</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">viewControllers</span><span class="p">.</span><span class="n">lastObject</span> <span class="o">==</span> <span class="nb">self</span><span class="p">)</span> <span class="c1">//避免推出下一个隐藏bar bar的vc过场动画展示了nav bar</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span> <span class="nl">setNavigationBarHidden</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">showNavBar</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">viewControllers</span><span class="p">.</span><span class="n">lastObject</span> <span class="o">==</span> <span class="nb">self</span><span class="p">)</span> <span class="c1">//避免推出下一个隐藏bar bar的vc过场动画展示了nav bar</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span> <span class="nl">setNavigationBarHidden</span><span class="p">:</span><span class="nb">NO</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h3>2. 把手势搞出来</h3>

<p>新增两个类：</p>

<p>1) OTInteractivePopRecognizerDelegate:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">OTInteractivePopRecognizerDelegate</span> : <span class="bp">NSObject</span> <span class="o">&lt;</span><span class="bp">UIGestureRecognizerDelegate</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">UINavigationController</span> <span class="o">*</span><span class="n">navigationController</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">OTInteractivePopRecognizerDelegate</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">gestureRecognizerShouldBegin:</span><span class="p">(</span><span class="bp">UIGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">gestureRecognizer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">viewControllers</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">gestureRecognizer:</span><span class="p">(</span><span class="bp">UIGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">gestureRecognizer</span> <span class="nf">shouldRecognizeSimultaneouslyWithGestureRecognizer:</span><span class="p">(</span><span class="bp">UIGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">otherGestureRecognizer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>2) OTNavigationPopGestureUtil</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;objc/runtime.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">OTNavigationPopGestureUtil</span> : <span class="bp">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">protectNavigationController:</span><span class="p">(</span><span class="bp">UINavigationController</span> <span class="o">*</span><span class="p">)</span><span class="nv">navigationController</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">OTNavigationPopGestureUtil</span>
</span><span class='line'>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">protectNavigationController:</span><span class="p">(</span><span class="bp">UINavigationController</span> <span class="o">*</span><span class="p">)</span><span class="nv">navigationController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OTInteractivePopRecognizerDelegate</span> <span class="o">*</span><span class="n">popRecognizer</span> <span class="o">=</span> <span class="n">objc_getAssociatedObject</span><span class="p">(</span><span class="n">navigationController</span><span class="p">,</span> <span class="n">_cmd</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">popRecognizer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">popRecognizer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">OTInteractivePopRecognizerDelegate</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>        <span class="n">popRecognizer</span><span class="p">.</span><span class="n">navigationController</span> <span class="o">=</span> <span class="n">navigationController</span><span class="p">;</span>
</span><span class='line'>        <span class="n">navigationController</span><span class="p">.</span><span class="n">interactivePopGestureRecognizer</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">popRecognizer</span><span class="p">;</span>
</span><span class='line'>        <span class="n">objc_setAssociatedObject</span><span class="p">(</span><span class="n">navigationController</span><span class="p">,</span> <span class="n">_cmd</span><span class="p">,</span> <span class="n">popRecognizer</span><span class="p">,</span> <span class="n">OBJC_ASSOCIATION_RETAIN_NONATOMIC</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在需要隐藏 navigation bar 的 view controller 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">OTNavigationPopGestureUtil</span> <span class="nl">protectNavigationController</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 模拟器键盘无响应和剪贴板不响应问题修复(Xcode 10.3)]]></title>
    <link href="http://openfibers.github.io/blog/2019/07/30/ios-simulator-keyboard-and-pasteboard-issues-fix/"/>
    <updated>2019-07-30T15:28:07+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/07/30/ios-simulator-keyboard-and-pasteboard-issues-fix</id>
    <content type="html"><![CDATA[<h2>键盘无响应</h2>

<p>iOS Simulator main menu - Hardware - Keyboard<br/>
首先取消 Use the Same Keyboard Language as macOS<br/>
点击 Connect Hardware Keyboard</p>

<h2>剪贴板无响应</h2>

<p>iOS Simulator 使用的剪贴板服务挂了，还是 main menu <br/>
Edit - 取消 Automatically Sync Pasteboard<br/>
再 Edit - 选中 Automatically Sync Pasteboard</p>

<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS 卸载 Symantec 和 McAfee]]></title>
    <link href="http://openfibers.github.io/blog/2019/07/30/uninstall-symantec-and-mcafee-on-macos/"/>
    <updated>2019-07-30T11:02:04+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/07/30/uninstall-symantec-and-mcafee-on-macos</id>
    <content type="html"><![CDATA[<p>Activity Monitor 查一下相关几个进程的 pid:</p>

<p>。。进程名我忘了记录了，大约就是 Mc 和 Sym 开头的几个进程</p>

<p>lsof 看一下 pid 相关的 file handle:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lsof -p pid_of_McAfee -Fn | grep Mc
</span><span class='line'>lsof -p pid_of_Symantec -Fn | grep Sym</span></code></pre></td></tr></table></div></figure>


<p>记录 McAfee 和 Symantec 的 executable file 位置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/Applications/Symantec Solutions/*
</span><span class='line'>/Applications/McAfee Endpoint.app
</span><span class='line'>/Library/Application Support/Symantec
</span><span class='line'>/Library/Application Support/McAfee
</span><span class='line'>/usr/local/McAfee
</span><span class='line'>/private/var/McAfee</span></code></pre></td></tr></table></div></figure>


<p>关机，长按 command + S, 进入 macOS single user mode, 检查磁盘并挂载磁盘：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fsck -fy
</span><span class='line'>mount -uw /</span></code></pre></td></tr></table></div></figure>


<p>删除 McAfee 和 Symantec 相关文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rm -rf /Applications/Symantec Solutions/*
</span><span class='line'>rm -rf /Applications/McAfee Endpoint.app
</span><span class='line'>rm -rf /Library/Application Support/Symantec
</span><span class='line'>rm -rf /Library/Application Support/McAfee
</span><span class='line'>rm -rf /usr/local/McAfee
</span><span class='line'>rm -rf /private/var/McAfee</span></code></pre></td></tr></table></div></figure>


<p>重启：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>reboot</span></code></pre></td></tr></table></div></figure>


<p>开机 Activity Monitor 里看看还有没有相关进程，如果有，从文章最开始再来一遍。。。</p>

<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Demark Sequential Using Numpy]]></title>
    <link href="http://openfibers.github.io/blog/2019/07/22/demark-sequential-using-numpy/"/>
    <updated>2019-07-22T15:35:07+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/07/22/demark-sequential-using-numpy</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">np_shift</span><span class="p">(</span><span class="n">np_array</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">,</span> <span class="n">n</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">fill</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">):</span>
</span><span class='line'>    <span class="n">e</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">empty_like</span><span class="p">(</span><span class="n">np_array</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>        <span class="n">e</span><span class="p">[:</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">fill</span>
</span><span class='line'>        <span class="n">e</span><span class="p">[</span><span class="n">n</span><span class="p">:]</span> <span class="o">=</span> <span class="n">np_array</span><span class="p">[:</span><span class="o">-</span><span class="n">n</span><span class="p">]</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">e</span><span class="p">[</span><span class="n">n</span><span class="p">:]</span> <span class="o">=</span> <span class="n">fill</span>
</span><span class='line'>        <span class="n">e</span><span class="p">[:</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">np_array</span><span class="p">[</span><span class="o">-</span><span class="n">n</span><span class="p">:]</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">td_sequential</span><span class="p">(</span><span class="n">close</span><span class="p">:</span> <span class="nb">list</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">:</span>
</span><span class='line'>    <span class="n">shift_const</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'>    <span class="n">close_np</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">close</span><span class="p">)</span>
</span><span class='line'>    <span class="n">close_shift</span> <span class="o">=</span> <span class="n">np_shift</span><span class="p">(</span><span class="n">close_np</span><span class="p">,</span> <span class="n">shift_const</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">compare_array</span> <span class="o">=</span> <span class="n">close_np</span> <span class="o">&gt;</span> <span class="n">close_shift</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">empty</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">close_np</span><span class="p">),</span> <span class="nb">int</span><span class="p">)</span>
</span><span class='line'>    <span class="n">counting_number</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">close_np</span><span class="p">)):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">np</span><span class="o">.</span><span class="n">isnan</span><span class="p">(</span><span class="n">close_shift</span><span class="p">[</span><span class="n">i</span><span class="p">]):</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">compare_bool</span> <span class="o">=</span> <span class="n">compare_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">compare_bool</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">counting_number</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">counting_number</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>                <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">counting_number</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">counting_number</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">counting_number</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>                <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">counting_number</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">counting_number</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPods 分支依赖时的 bug]]></title>
    <link href="http://openfibers.github.io/blog/2019/07/22/cocoa-pods-branch-ref-bug/"/>
    <updated>2019-07-22T15:22:31+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/07/22/cocoa-pods-branch-ref-bug</id>
    <content type="html"><![CDATA[<h3>Pod 1.5.0 分支依赖，分支有新提交后，重新 pod install，pod 不更新</h3>

<p>主工程源码依赖 SDK develop 分支，<code>pod install</code> 和 <code>pod install --fast-mode</code> ，拉下来的 SDK 均不是 develop 分支最新提交，而是上次执行 <code>pod install</code> 时 develop 分支的提交。</p>

<p>清空 <code>./Pods</code> 和 <code>~/Library/Caches/CocoaPods/*</code> 均无效（缓存不在这里）。</p>

<p>由于下载时间太长，不想清掉全量本地库，于是想了一个变通的方法。</p>

<p>SDK 里 <code>gco -b feature/merge_main_proj</code>，主工程依赖 SDK <code>feature/merge_main_proj</code> 分支，重新 <code>pod install --fast-mode</code> 就好了，因为 pods 里没有对 <code>feature/merge_main_proj</code> 的缓存，此时肯定会好。</p>

<p>然后主工程切回对 SDK <code>develop</code> 分支的依赖，重新 <code>pod install --fast-mode</code> 也好了。估计是对一个 pod 的多个分支只有一份缓存（pods 版本 1.5.0）。</p>

<h3>新加的 pod 不更新</h3>

<p>先来一次 <code>pod repo update</code> 再 <code>pod install</code> 。</p>

<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python3 一些 talib 没有的 indicators]]></title>
    <link href="http://openfibers.github.io/blog/2019/06/04/python3-ta-indicators/"/>
    <updated>2019-06-04T16:05:32+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/06/04/python3-ta-indicators</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Pivot Points, Supports and Resistances</span>
</span><span class='line'><span class="k">def</span> <span class="nf">PPSR</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>
</span><span class='line'>    <span class="n">PP</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>    <span class="n">R1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">PP</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">S1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">PP</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">R2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">PP</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">S2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">PP</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">R3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="n">PP</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]))</span>
</span><span class='line'>    <span class="n">S3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">PP</span><span class="p">))</span>
</span><span class='line'>    <span class="n">psr</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;PP&#39;</span><span class="p">:</span><span class="n">PP</span><span class="p">,</span> <span class="s">&#39;R1&#39;</span><span class="p">:</span><span class="n">R1</span><span class="p">,</span> <span class="s">&#39;S1&#39;</span><span class="p">:</span><span class="n">S1</span><span class="p">,</span> <span class="s">&#39;R2&#39;</span><span class="p">:</span><span class="n">R2</span><span class="p">,</span> <span class="s">&#39;S2&#39;</span><span class="p">:</span><span class="n">S2</span><span class="p">,</span> <span class="s">&#39;R3&#39;</span><span class="p">:</span><span class="n">R3</span><span class="p">,</span> <span class="s">&#39;S3&#39;</span><span class="p">:</span><span class="n">S3</span><span class="p">}</span>
</span><span class='line'>    <span class="n">PSR</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">psr</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">PSR</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Stochastic oscillator %K</span>
</span><span class='line'><span class="k">def</span> <span class="nf">STOK</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>
</span><span class='line'>    <span class="n">SOk</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;SO%k&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">SOk</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Stochastic Oscillator, EMA smoothing, nS = slowing (1 if no slowing)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">STO</span><span class="p">(</span><span class="n">df</span><span class="p">,</span>  <span class="n">nK</span><span class="p">,</span> <span class="n">nD</span><span class="p">,</span> <span class="n">nS</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">SOk</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">min</span><span class="p">())</span> <span class="o">/</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">min</span><span class="p">()),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;SO%k&#39;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nK</span><span class="p">))</span>
</span><span class='line'>    <span class="n">SOd</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">SOk</span><span class="o">.</span><span class="n">ewm</span><span class="p">(</span><span class="n">ignore_na</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">span</span><span class="o">=</span><span class="n">nD</span><span class="p">,</span> <span class="n">min_periods</span><span class="o">=</span><span class="n">nD</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">adjust</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;SO</span><span class="si">%d</span><span class="s">&#39;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nD</span><span class="p">))</span>
</span><span class='line'>    <span class="n">SOk</span> <span class="o">=</span> <span class="n">SOk</span><span class="o">.</span><span class="n">ewm</span><span class="p">(</span><span class="n">ignore_na</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">span</span><span class="o">=</span><span class="n">nS</span><span class="p">,</span> <span class="n">min_periods</span><span class="o">=</span><span class="n">nS</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">adjust</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</span><span class='line'>    <span class="n">SOd</span> <span class="o">=</span> <span class="n">SOd</span><span class="o">.</span><span class="n">ewm</span><span class="p">(</span><span class="n">ignore_na</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">span</span><span class="o">=</span><span class="n">nS</span><span class="p">,</span> <span class="n">min_periods</span><span class="o">=</span><span class="n">nS</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">adjust</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">SOk</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">SOd</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Stochastic Oscillator, SMA smoothing, nS = slowing (1 if no slowing)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">STO</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">nK</span><span class="p">,</span> <span class="n">nD</span><span class="p">,</span>  <span class="n">nS</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">SOk</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">min</span><span class="p">())</span> <span class="o">/</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">nK</span><span class="p">)</span><span class="o">.</span><span class="n">min</span><span class="p">()),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;SO%k&#39;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nK</span><span class="p">))</span>
</span><span class='line'>    <span class="n">SOd</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">SOk</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="n">nD</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;SO</span><span class="si">%d</span><span class="s">&#39;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nD</span><span class="p">))</span>
</span><span class='line'>    <span class="n">SOk</span> <span class="o">=</span> <span class="n">SOk</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="n">nS</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</span><span class='line'>    <span class="n">SOd</span> <span class="o">=</span> <span class="n">SOd</span><span class="o">.</span><span class="n">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="n">nS</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">SOk</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">SOd</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Mass Index</span>
</span><span class='line'><span class="k">def</span> <span class="nf">MassI</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>
</span><span class='line'>    <span class="n">Range</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">EX1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">Range</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="mi">9</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">EX2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">EX1</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="mi">9</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">Mass</span> <span class="o">=</span> <span class="n">EX1</span> <span class="o">/</span> <span class="n">EX2</span>
</span><span class='line'>    <span class="n">MassI</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">Mass</span><span class="p">,</span> <span class="mi">25</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;Mass Index&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">MassI</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Vortex Indicator: http://www.vortexindicator.com/VFX_VORTEX.PDF</span>
</span><span class='line'><span class="k">def</span> <span class="nf">Vortex</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">TR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>        <span class="n">Range</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;High&#39;</span><span class="p">),</span> <span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">&#39;Close&#39;</span><span class="p">))</span> <span class="o">-</span> <span class="nb">min</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;Low&#39;</span><span class="p">),</span> <span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">&#39;Close&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="n">TR</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Range</span><span class="p">)</span>
</span><span class='line'>        <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">VM</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>        <span class="n">Range</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;High&#39;</span><span class="p">)</span> <span class="o">-</span> <span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">&#39;Low&#39;</span><span class="p">))</span> <span class="o">-</span> <span class="nb">abs</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;Low&#39;</span><span class="p">)</span> <span class="o">-</span> <span class="n">df</span><span class="o">.</span><span class="n">get_value</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">&#39;High&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="n">VM</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Range</span><span class="p">)</span>
</span><span class='line'>        <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">VI</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">VM</span><span class="p">),</span> <span class="n">n</span><span class="p">)</span> <span class="o">/</span> <span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">TR</span><span class="p">),</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;Vortex_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">VI</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># KST Oscillator</span>
</span><span class='line'><span class="k">def</span> <span class="nf">KST</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">r1</span><span class="p">,</span> <span class="n">r2</span><span class="p">,</span> <span class="n">r3</span><span class="p">,</span> <span class="n">r4</span><span class="p">,</span> <span class="n">n1</span><span class="p">,</span> <span class="n">n2</span><span class="p">,</span> <span class="n">n3</span><span class="p">,</span> <span class="n">n4</span><span class="p">):</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">r1</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="n">r1</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC1</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">r2</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="n">r2</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC2</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">r3</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="n">r3</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC3</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">r4</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="n">r4</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC4</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">KST</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">ROC1</span><span class="p">,</span> <span class="n">n1</span><span class="p">)</span> <span class="o">+</span> <span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">ROC2</span><span class="p">,</span> <span class="n">n2</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">ROC3</span><span class="p">,</span> <span class="n">n3</span><span class="p">)</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">pd</span><span class="o">.</span><span class="n">rolling_sum</span><span class="p">(</span><span class="n">ROC4</span><span class="p">,</span> <span class="n">n4</span><span class="p">)</span> <span class="o">*</span> <span class="mi">4</span><span class="p">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;KST_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">r1</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">r2</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">r3</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">r4</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n1</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n2</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n3</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">KST</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># True Strength Index</span>
</span><span class='line'><span class="k">def</span> <span class="nf">TSI</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">aM</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">M</span><span class="p">)</span>
</span><span class='line'>    <span class="n">EMA1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">M</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="n">r</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="n">r</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">aEMA1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">aM</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="n">r</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="n">r</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">EMA2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">EMA1</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="n">s</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">aEMA2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">aEMA1</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="n">s</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">TSI</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">EMA2</span> <span class="o">/</span> <span class="n">aEMA2</span><span class="p">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;TSI_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">s</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">TSI</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Accumulation/Distribution</span>
</span><span class='line'><span class="k">def</span> <span class="nf">ACCDIST</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">ad</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Volume&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">ad</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">ad</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">AD</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">ROC</span><span class="p">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;Acc/Dist_ROC_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">AD</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Force Index</span>
</span><span class='line'><span class="k">def</span> <span class="nf">FORCE</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">F</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Volume&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;Force_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">F</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Ease of Movement</span>
</span><span class='line'><span class="k">def</span> <span class="nf">EOM</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">EoM</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span> <span class="o">*</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Volume&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">Eom_ma</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_mean</span><span class="p">(</span><span class="n">EoM</span><span class="p">,</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;EoM_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">Eom_ma</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Coppock Curve</span>
</span><span class='line'><span class="k">def</span> <span class="nf">COPP</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">11</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">11</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC1</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">M</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">14</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">N</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">14</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ROC2</span> <span class="o">=</span> <span class="n">M</span> <span class="o">/</span> <span class="n">N</span>
</span><span class='line'>    <span class="n">Copp</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">ewma</span><span class="p">(</span><span class="n">ROC1</span> <span class="o">+</span> <span class="n">ROC2</span><span class="p">,</span> <span class="n">span</span> <span class="o">=</span> <span class="n">n</span><span class="p">,</span> <span class="n">min_periods</span> <span class="o">=</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;Copp_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">Copp</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Keltner Channel</span>
</span><span class='line'><span class="k">def</span> <span class="nf">KELCH</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">KelChM</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_mean</span><span class="p">((</span><span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="mi">3</span><span class="p">,</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;KelChM_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">KelChU</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_mean</span><span class="p">((</span><span class="mi">4</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="mi">3</span><span class="p">,</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;KelChU_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">KelChD</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">rolling_mean</span><span class="p">((</span><span class="o">-</span><span class="mi">2</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;High&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Low&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">&#39;Close&#39;</span><span class="p">])</span> <span class="o">/</span> <span class="mi">3</span><span class="p">,</span> <span class="n">n</span><span class="p">),</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#39;KelChD_&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">KelChM</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">KelChU</span><span class="p">)</span>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">KelChD</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">df</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># Donchian Channel</span>
</span><span class='line'><span class="k">def</span> <span class="nf">DONCH</span><span class="p">(</span><span class="n">low</span><span class="p">,</span> <span class="n">high</span><span class="p">,</span> <span class="n">timeperiod</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">20</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">high</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="n">low</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[],</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">dc_low</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">dc_high</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">high</span><span class="p">)):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">timeperiod</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>            <span class="n">dc_low</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
</span><span class='line'>            <span class="n">dc_high</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">min_list</span> <span class="o">=</span> <span class="n">low</span><span class="o">.</span><span class="n">ix</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="p">(</span><span class="n">timeperiod</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span> <span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="n">max_list</span> <span class="o">=</span> <span class="n">high</span><span class="o">.</span><span class="n">ix</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="p">(</span><span class="n">timeperiod</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span> <span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">min_list</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="nb">len</span><span class="p">(</span><span class="n">max_list</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>                <span class="n">dc_low</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
</span><span class='line'>                <span class="n">dc_high</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">)</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">dc_min</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">min_list</span><span class="p">)</span>
</span><span class='line'>                <span class="n">dc_max</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">max_list</span><span class="p">)</span>
</span><span class='line'>                <span class="n">dc_low</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dc_min</span><span class="p">)</span>
</span><span class='line'>                <span class="n">dc_high</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dc_max</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">dc_low</span><span class="p">,</span> <span class="n">dc_high</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人,经济与国家 读书笔记]]></title>
    <link href="http://openfibers.github.io/blog/2019/05/28/man-economy-and-country/"/>
    <updated>2019-05-28T01:02:28+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/05/28/man-economy-and-country</id>
    <content type="html"><![CDATA[<h1>第一章 人的行动的基本原理</h1>

<h1>第二章 直接交换</h1>

<ol>
<li><p>投机和供求表</p></li>
<li><p>库存和总持有需求</p></li>
<li><p>价格低时,市场的总需求提升;价格高时,市场的总需求降低</p></li>
<li><p>市场会自行发现一个<strong>均衡价格</strong>,使得总库存需求等于总需求</p></li>
<li><p>连续的市场与价格的变动</p></li>
<li><p>大型市场中,打到均衡价格的速度快,投机行为趋向于改善对均衡点的预期,使均衡点快速到来</p></li>
<li>市场的单一属性改变:

<ol>
<li>需求表增加,供给表不变,新的均衡价格更高,新的均衡状态下发生的交易量比旧的更多,价格上升,交易量上升</li>
<li>和1相反,需求增加供给不变,价格下降,交易量下降</li>
<li>供给表上升,需求表不变,人们愿意从库存中处理更多的库存,新的均衡价格比旧的更低,均衡交易量更多,价格下降,交易量上升</li>
<li>和3相反,供给下降,需求不变,价格上升,交易量下降</li>
<li>总结一下,需求和供给都和交易量正相关,需求和价格正相关,供给和价格负相关</li>
</ol>
</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Manjaro from macOS]]></title>
    <link href="http://openfibers.github.io/blog/2019/05/23/install-manjaro/"/>
    <updated>2019-05-23T11:09:28+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/05/23/install-manjaro</id>
    <content type="html"><![CDATA[<h2>从 macOS 10.14 制作安装 U 盘</h2>

<p>下载好 iso 之后，将 iso 改名为 ~/Downloads/manjaro-kde.iso，然后将 iso 转换成 dmg:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hdiutil convert -format UDRW -o ~/Downloads/manjaro ~/Downloads/manjaro-kde.iso</span></code></pre></td></tr></table></div></figure>


<p>看一下 U 盘是 disk几：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>diskutil list</span></code></pre></td></tr></table></div></figure>


<p>假设 U 盘是 disk9，分区，unmount，再写入镜像：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>diskutil partitionDisk disk9 1 GPT HFS+ newdisk R
</span><span class='line'>diskutil unmountDisk /dev/disk9
</span><span class='line'>sudo dd if=/Users/openthread/Downloads/manjaro.dmg of=/dev/rdisk9 bs=1m</span></code></pre></td></tr></table></div></figure>


<p>U盘插到 pc，重启，安装</p>

<!--more-->


<h2>安装好以后</h2>

<h3>设置国内源</h3>

<p>华科源（比清华的快很多），更改信任设置（以便安装 chrome、搜狗拼音、微信、QQ 等软件）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo vi /etc/pacman.conf</span></code></pre></td></tr></table></div></figure>


<p>加入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[archlinuxcn]
</span><span class='line'>SigLevel = Optional TrustedOnly
</span><span class='line'>Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span></code></pre></td></tr></table></div></figure>


<p>更新软件缓存，更新 keyring：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -Syy && sudo pacman -S archlinuxcn-keyring</span></code></pre></td></tr></table></div></figure>


<p>切换默认源：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman-mirrors -i -c China -m rank # 弹框后选择华科的源，点击确认</span></code></pre></td></tr></table></div></figure>


<h3>系统更新</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -Syu</span></code></pre></td></tr></table></div></figure>


<p>然后打开 Octopi，系统更新应该没有了</p>

<h3>看看有没有没驱动的硬件</h3>

<h3>Chrome</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S google-chrome</span></code></pre></td></tr></table></div></figure>


<h3>Google 拼音</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S fcitx-im     # 全部安装
</span><span class='line'>sudo pacman -S fcitx-configtool
</span><span class='line'>sudo pacman -S fcitx-googlepinyin</span></code></pre></td></tr></table></div></figure>


<p>然后<code>vi ~/.xprofile</code>，加入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export LC_ALL=zh_CN.UTF-8
</span><span class='line'>export GTK_IM_MODULE=fcitx
</span><span class='line'>export QT_IM_MODULE=fcitx
</span><span class='line'>export XMODIFIERS=”@im=fcitx”</span></code></pre></td></tr></table></div></figure>


<p>注销重新登录，打开 Fcitx Configuration，启用 google pinyin。这时候语言会变成中文，如果想换回原语言，注释掉 <code>export LC_ALL=zh_CN.UTF-8</code>，注销再登录回来即可。</p>

<h3>网易云音乐</h3>

<p>安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S netease-cloud-music</span></code></pre></td></tr></table></div></figure>


<p>启动：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>netease-cloud-music</span></code></pre></td></tr></table></div></figure>


<h3>Dota2</h3>

<p>直接用自带的 steam 装就完事</p>

<h3>微信</h3>

<p>安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S electronic-wechat</span></code></pre></td></tr></table></div></figure>


<p>启动：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>electronic-wechat</span></code></pre></td></tr></table></div></figure>


<h3>Vim</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S vim</span></code></pre></td></tr></table></div></figure>


<h3>yaourt</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S yaourt</span></code></pre></td></tr></table></div></figure>


<h3>Python3 + Pycharm</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S pycharm-community-edition</span></code></pre></td></tr></table></div></figure>


<p>清华 pypi 源：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span></code></pre></td></tr></table></div></figure>


<h3>IntelliJ IDEA</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S intellij-idea-community-edition</span></code></pre></td></tr></table></div></figure>


<h3>shadowsocks</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S shadowsocks-libev
</span><span class='line'>sudo pacman -S shadowsocks-qt5</span></code></pre></td></tr></table></div></figure>


<p>然后 chrome 在 extension store 安装 Proxy SwitchyOmega，并配置。</p>

<h3>字体</h3>

<p>小撸怡情，不然舔到最后一无所有</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji
</span><span class='line'>yaourt -S ttf-meslo
</span><span class='line'>yaourt -S cairo-coloredemoji
</span><span class='line'>fc-cache --force --verbose</span></code></pre></td></tr></table></div></figure>


<h3>蓝牙</h3>

<p>没搞定</p>

<h3>Sublime Text 3</h3>

<p>安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -O https://download.sublimetext.com/sublimehq-pub.gpg && sudo pacman-key --add sublimehq-pub.gpg && sudo pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg
</span><span class='line'>echo -e "\n[sublime-text]\nServer = https://download.sublimetext.com/arch/stable/x86_64" | sudo tee -a /etc/pacman.conf
</span><span class='line'>sudo pacman -Syu sublime-text</span></code></pre></td></tr></table></div></figure>




<!-- 
3207 激活

1. subl /etc/hosts 加入 

127.0.0.1 license.sublimehq.com
127.0.0.1 45.55.255.55
127.0.0.1 45.55.41.223
0.0.0.0 license.sublimehq.com
0.0.0.0 45.55.255.55
0.0.0.0 45.55.41.223
127.0.0.1 www.sublimetext.com
127.0.0.1 sublimetext.com
127.0.0.1 sublimehq.com
127.0.0.1 telemetry.sublimehq.com

2. HEX打开 
搜索16进制 97 94 0D 00
改为  00 00 00 00

3. 禁用更新
Go to “Preferences -> Settings-User/Distraction Free“
Add this line: “update_check”: false,

4. 输入 license

&#8212;&#8211; BEGIN LICENSE &#8212;&#8211;
TwitterInc
200 User License
EA7E-890007
1D77F72E 390CDD93 4DCBA022 FAF60790
61AA12C0 A37081C5 D0316412 4584D136
94D7F7D4 95BC8C1C 527DA828 560BB037
D1EDDD8C AE7B379F 50C9D69D B35179EF
2FE898C4 8E4277A8 555CE714 E1FB0E43
D5D52613 C3D12E98 BC49967F 7652EED2
9D2D2E61 67610860 6D338B72 5CF95C69
E36B85CC 84991F19 7575D828 470A92AB
&#8212;&#8212; END LICENSE &#8212;&#8212;

&#8211;>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JDK 和 Maven macOS 的安装与配置]]></title>
    <link href="http://openfibers.github.io/blog/2019/05/15/java-and-maven-path/"/>
    <updated>2019-05-15T20:53:13+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/05/15/java-and-maven-path</id>
    <content type="html"><![CDATA[<h1>JDK</h1>

<h3>下载安装</h3>

<p>到 <a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a> 下载想用的 jdk 版本，需要登录。</p>

<p>下载好以后双击 dmg 安装。</p>

<p>命令行输入 <code>java -version</code> 查看版本。</p>

<h3>配置 JAVA_HOME 环境变量</h3>

<p>安装包没自动配置环境变量，可能是考虑宿主机多个不同 jdk 版本，没替用户做决定，需要手动配置一下。</p>

<!--more-->


<p>首先看一下实际的 java home:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/usr/libexec/java_home -V
</span><span class='line'>Matching Java Virtual Machines <span class="o">(</span>1<span class="o">)</span>:
</span><span class='line'>    1.8.0_211, x86_64:  <span class="s2">&quot;Java SE 8&quot;</span> /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home
</span><span class='line'>
</span><span class='line'>/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home
</span></code></pre></td></tr></table></div></figure>


<p>拿到路径 <code>/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home</code> 后，打开 shell profile 修改配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p>增加配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span><span class="sb">`</span>/usr/libexec/java_home<span class="sb">`</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$JAVA_HOME</span>/bin:<span class="nv">$PATH</span>
</span></code></pre></td></tr></table></div></figure>


<h3>验证</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="nv">$JAVA_HOME</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Maven</h1>

<h3>下载</h3>

<p><a href="https://maven.apache.org/index.html">https://maven.apache.org/index.html</a></p>

<h3>安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>unzip apache-maven-3.6.1-bin.zip
</span><span class='line'>or
</span><span class='line'>tar xzvf apache-maven-3.6.1-bin.tar.gz
</span><span class='line'>sudo cp -r apache-maven-3.6.1 /opt
</span><span class='line'>vim ~/.zshrc
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/opt/apache-maven-3.6.1/bin:<span class="nv">$PATH</span>
</span></code></pre></td></tr></table></div></figure>


<h3>验证</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mvn -v
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python/Numpy 性能优化]]></title>
    <link href="http://openfibers.github.io/blog/2019/02/11/python-optimize/"/>
    <updated>2019-02-11T10:53:30+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/02/11/python-optimize</id>
    <content type="html"><![CDATA[<h1>Cython</h1>

<p>将 Python 翻译成 c/c++ 再编译执行。<br/>
比原生 Python 快 1.5 倍左右。<br/>
缺点是要写个 makefile</p>

<h1>pypy</h1>

<p>优点是无需像 cython 一样需要修改代码，写 makefile 和 main，缺点是有些三方库不支持。</p>

<p>安装：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install pypy3
</span></code></pre></td></tr></table></div></figure>


<p>然后安装 pypy pip。注意 pypy pip 不支持 socks5 代理，可能需要关闭或指定 http 代理：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pypy3 -m ensurepip
</span><span class='line'><span class="nb">export </span><span class="nv">ALL_PROXY</span><span class="o">=</span>
</span><span class='line'>pypy3 -m pip install pip --upgrade
</span><span class='line'>pypy3 -m pip install setuptools --upgrade
</span></code></pre></td></tr></table></div></figure>


<p>将 pypy3 path 加入 $PATH 不然安装 tables 的时候报 warning:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/local/share/pypy3
</span></code></pre></td></tr></table></div></figure>


<p>安装依赖（举点例子）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pypy3 -m pip install numpy
</span><span class='line'>pypy3 -m pip install TA-Lib
</span><span class='line'>pypy3 -m pip install requests
</span><span class='line'>pypy3 -m pip install ccxt
</span><span class='line'>pypy3 -m pip install tables
</span><span class='line'>pypy3 -m pip install matplotlib
</span><span class='line'>pypy3 -m pip install coloredlogs
</span><span class='line'>pypy3 -m pip install pandas
</span></code></pre></td></tr></table></div></figure>


<p>如果 macOS 遇到 pypy 安装 numpy 时提示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Checking <span class="k">for</span> cc... ld: library not found <span class="k">for</span> -lgcc_s.10.4
</span><span class='line'>clang: error: linker <span class="nb">command </span>failed with <span class="nb">exit </span>code <span class="m">1</span> <span class="o">(</span>use -v to see invocation<span class="o">)</span>
</span><span class='line'>...
</span><span class='line'>RuntimeError: Broken toolchain: cannot link a simple C program
</span></code></pre></td></tr></table></div></figure>


<p>尝试下面命令后再次重试安装 numpy：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/local/lib
</span><span class='line'>sudo ln -s ../../lib/libSystem.B.dylib libgcc_s.10.4.dylib
</span><span class='line'><span class="nb">cd</span> -
</span></code></pre></td></tr></table></div></figure>


<h1>Numpy</h1>

<p>比原生 Python 快 10 倍左右。</p>

<h1>numexpr</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">numexpr</span> <span class="kn">as</span> <span class="nn">ne</span>
</span><span class='line'><span class="n">N</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">**</span> <span class="mi">5</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">ne</span><span class="o">.</span><span class="n">evaluate</span><span class="p">(</span><span class="s">&#39;a ** 2 + b ** 2&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>比 Numpy 快 2 到 10 倍。</p>

<!--more-->


<h1>Pandas: 避免大量 df.append() 或 df.iloc() 调用</h1>

<p>如果有频繁的 append 操作，使用 list 而非 df，CPU 耗时、内存消耗都降低很多。3600 行的回测运行 10 次，df 改为 list，运行时间从 49 秒降低至 13.35 秒，性能提升 267%。<br/>
如果有频繁的 iloc 操作，想办法使用 list + dict 代替 iloc + key 取数，还是刚才那个 3600 行跑 10 次，14.5 秒缩短到 9 秒，性能提升 55%。</p>

<h1>CPU 耗时分析</h1>

<h2>pprofile</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pip3 install pprofile
</span><span class='line'>pprofile hard_work.py <span class="p">|</span> grep -v 0.00% &gt; hard_work.log
</span></code></pre></td></tr></table></div></figure>


<p>结果如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Command line: hard_work.py
</span><span class='line'>Total duration: 12.2936s
</span><span class='line'>File: /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py
</span><span class='line'>File duration: 2.11106s <span class="o">(</span>17.17%<span class="o">)</span>
</span><span class='line'>Line <span class="c">#|      Hits|         Time| Time per hit|      %|Source code</span>
</span><span class='line'>------+----------+-------------+-------------+-------+-----------
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00452113<span class="p">|</span>   0.00452113<span class="p">|</span>  0.04%<span class="p">|</span><span class="c"># &lt;frozen importlib._bootstrap&gt;:1009 _handle_fromlist</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         8<span class="p">|</span>   0.00171661<span class="p">|</span>  0.000214577<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/process.py:72 __init__</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>    0.0330989<span class="p">|</span>    0.0330989<span class="p">|</span>  0.27%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:250 _setup_queues</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>    0.0355132<span class="p">|</span>    0.0355132<span class="p">|</span>  0.29%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:227 _repopulate_pool</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>  0.000757217<span class="p">|</span>  0.000757217<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py:758 __init__</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00308776<span class="p">|</span>   0.00308776<span class="p">|</span>  0.03%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py:829 start</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>  0.000803709<span class="p">|</span>  0.000803709<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py:829 start</span>
</span><span class='line'>   218<span class="p">|</span>         8<span class="p">|</span>   0.00123382<span class="p">|</span>  0.000154227<span class="p">|</span>  0.01%<span class="p">|</span>            <span class="nv">worker</span> <span class="o">=</span> self._pool<span class="o">[</span>i<span class="o">]</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         8<span class="p">|</span>   0.00212884<span class="p">|</span>  0.000266105<span class="p">|</span>  0.02%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:152 Process</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         8<span class="p">|</span>    0.0311823<span class="p">|</span>   0.00389779<span class="p">|</span>  0.25%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/process.py:101 start</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00201011<span class="p">|</span>   0.00201011<span class="p">|</span>  0.02%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:212 _join_exited_workers</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>    0.0309622<span class="p">|</span>    0.0309622<span class="p">|</span>  0.25%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/context.py:109 SimpleQueue</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00208473<span class="p">|</span>   0.00208473<span class="p">|</span>  0.02%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/context.py:109 SimpleQueue</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00138021<span class="p">|</span>   0.00138021<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:650 get</span>
</span><span class='line'>   411<span class="p">|</span>        19<span class="p">|</span>  0.000627041<span class="p">|</span>  3.30022e-05<span class="p">|</span>  0.01%<span class="p">|</span>        <span class="k">while</span> thread._state <span class="o">==</span> RUN or <span class="o">(</span>pool._cache and thread._state !<span class="o">=</span> TERMINATE<span class="o">)</span>:
</span><span class='line'>   412<span class="p">|</span>        19<span class="p">|</span>    0.0777183<span class="p">|</span>   0.00409043<span class="p">|</span>  0.63%<span class="p">|</span>            pool._maintain_pool<span class="o">()</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00205207<span class="p">|</span>   0.00205207<span class="p">|</span>  0.02%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:244 _maintain_pool</span>
</span><span class='line'>   413<span class="p">|</span>        18<span class="p">|</span>      2.02267<span class="p">|</span>     0.112371<span class="p">|</span> 16.45%<span class="p">|</span>            time.sleep<span class="o">(</span>0.1<span class="o">)</span>
</span><span class='line'>   422<span class="p">|</span>         1<span class="p">|</span>   0.00222588<span class="p">|</span>   0.00222588<span class="p">|</span>  0.02%<span class="p">|</span>        <span class="k">for</span> taskseq, set_length in iter<span class="o">(</span>taskqueue.get, None<span class="o">)</span>:
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>   0.00127983<span class="p">|</span>   0.00127983<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py:534 wait</span>
</span><span class='line'><span class="o">(</span>call<span class="o">)</span><span class="p">|</span>         1<span class="p">|</span>    0.0013001<span class="p">|</span>    0.0013001<span class="p">|</span>  0.01%<span class="p">|</span><span class="c"># /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/pool.py:647 wait</span>
</span></code></pre></td></tr></table></div></figure>


<h2>vprof</h2>

<p>如果使用 cython，直接：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vprof -c h hard_work.py <span class="c"># code heatmap (first call below)</span>
</span><span class='line'>vprof -c p hard_work.py <span class="c"># code profiling (second call below)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果不使用 cython 而是 pypy：</p>

<p>使用 pypy pip 安装 vprof。注意 pypy pip 不支持 socks5 代理，可能需要关闭或指定 http 代理：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ALL_PROXY</span><span class="o">=</span>
</span><span class='line'>pypy3 -m pip install vprof
</span></code></pre></td></tr></table></div></figure>


<p>然后 pypy3 下要安装原有的 pip 各种依赖，最后跑 vprof：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pypy3 -m vprof -c h hard_work.py <span class="c"># code heatmap (first call below)</span>
</span><span class='line'>pypy3 -m vprof -c p hard_work.py <span class="c"># code profiling (second call below)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>多线程与多进程并发</h1>

<p>由于全局解释器的存在，多线程基本没用，用线程池最多优化个5%顶天了。</p>

<p>直接上进程池。进程池的好处是：<br/>
    1) CPU 层面不受全局解释器的负面影响，可以发挥处理器的最大性能；<br/>
    2) 内存层面，如果同一进程一直执行大内存操作（稍微大点的 DataFrame），进程会一直申请内存不释放(python 用完的对象的内存会留给后面的 python 对象使用，不会还给系统)。而单独的进程结束的时候，系统会释放掉进程分配的内存。参考以下两个链接：<br/>
        * <a href="http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm">Why doesn&rsquo;t Python release the memory when I delete a large object?</a><br/>
        * <a href="https://stackoverflow.com/questions/15455048/releasing-memory-in-python">https://stackoverflow.com/questions/15455048/releasing-memory-in-python</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">multiprocessing</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">single_job</span><span class="p">(</span><span class="n">param</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">param</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">cpu_count_m</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="o">.</span><span class="n">cpu_count</span><span class="p">()</span>
</span><span class='line'>    <span class="n">pool</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="o">.</span><span class="n">Pool</span><span class="p">(</span><span class="n">cpu_count_m</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result_m</span> <span class="o">=</span> <span class="n">pool</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="n">single_job</span><span class="p">,</span> <span class="p">[</span><span class="n">param</span><span class="p">])</span>
</span><span class='line'>    <span class="n">pool</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>    <span class="n">pool</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>在4代i5上（双核四线程），测试了一个原本单进程执行的287秒的操作，设置进程池数量为2，最终时间为187秒（提升53%），进程池数量为4，最终时间为127秒（提升126%）。也就是线程池数量设置直接用<code>multiprocessing.cpu_count()</code>即可，不必考虑物理核数。<br/>
内存从原本的峰值10+G降到了0.6G。4代i7（四核八线程）跑起来会更快（懒的测没测大概四倍多吧），内存峰值也稍微会多一点（1.2G）。老电脑没到期，8代i7要9月份才能换到，性能应该强更多了吧。。。。</p>

<h4>matplot 无法在进程池绘制问题</h4>

<p>如果弹 The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec(). 错误：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">The</span> <span class="n">process</span> <span class="n">has</span> <span class="n">forked</span> <span class="ow">and</span> <span class="n">you</span> <span class="n">cannot</span> <span class="n">use</span> <span class="n">this</span> <span class="n">CoreFoundation</span> <span class="n">functionality</span> <span class="n">safely</span><span class="o">.</span> <span class="n">You</span> <span class="n">MUST</span> <span class="k">exec</span><span class="p">()</span><span class="o">.</span>
</span><span class='line'><span class="n">Break</span> <span class="n">on</span> <span class="n">__THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__</span><span class="p">()</span> <span class="n">to</span> <span class="n">debug</span><span class="o">.</span>
</span><span class='line'><span class="n">The</span> <span class="n">process</span> <span class="n">has</span> <span class="n">forked</span> <span class="ow">and</span> <span class="n">you</span> <span class="n">cannot</span> <span class="n">use</span> <span class="n">this</span> <span class="n">CoreFoundation</span> <span class="n">functionality</span> <span class="n">safely</span><span class="o">.</span> <span class="n">You</span> <span class="n">MUST</span> <span class="k">exec</span><span class="p">()</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>不用把fork进程的数据回主进程渲染。直接更新 matplot 到 3.0.3 以上版本：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">pip3</span> <span class="n">install</span> <span class="n">matplotlib</span> <span class="o">--</span><span class="n">upgrade</span>
</span></code></pre></td></tr></table></div></figure>


<h1>CuPy</h1>

<p>使用 CUDA 计算，直接将 numpy 替换成 cupy。<br/>
比原生 Python 快 250 倍左右。<br/>
问题就是 Macbook Pro 新款都是 A 卡，真、苹果与狗不得入内。</p>

<h1>多显卡</h1>

<p>使用 cupy.cuda.Device(cuda_index) 切换显卡设备：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">with</span> <span class="n">cupy</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">Device</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">x_on_gpu1</span> <span class="o">=</span> <span class="n">cupy</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里 x_on_gpu1 将在 GPU 1 上分配。</p>

<h1>使用 Chainer 简化主存/显存切换</h1>

<p>本小节内容摘自 <a href="https://bennix.github.io/blog/2017/12/14/chain_gpu/">在Chainer中使用GPU</a>，更多详细信息请参考原文。</p>

<p>Chainer将CuPy的默认分配器更改为内存池，因此用户可以直接使用CuPy的功能而不需要处理内存分配器。</p>

<p>Chainer提供了一些方便的功能来自动切换和选择设备。例如，chainer.cuda.to_gpu（）函数将numpy.ndarray对象复制到指定的设备：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">x_cpu</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span><span class='line'><span class="n">x_gpu</span> <span class="o">=</span> <span class="n">cuda</span><span class="o">.</span><span class="n">to_gpu</span><span class="p">(</span><span class="n">x_cpu</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>它相当于使用CuPy的以下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">x_cpu</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
</span><span class='line'><span class="k">with</span> <span class="n">cupy</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">Device</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">x_gpu</span> <span class="o">=</span> <span class="n">cupy</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">x_cpu</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>更多并发骚操作，参考<a href="https://python-parallel-programmning-cookbook.readthedocs.io/zh_CN/latest/index.html">Python并行编程</a>。</p>

<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用pandas进行数据分析第二版 笔记]]></title>
    <link href="http://openfibers.github.io/blog/2019/02/03/pyda-2e-notes/"/>
    <updated>2019-02-03T16:10:22+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/02/03/pyda-2e-notes</id>
    <content type="html"><![CDATA[<p>先放书的链接： <a href="https://www.amazon.cn/dp/B07G2PK49V">https://www.amazon.cn/dp/B07G2PK49V</a></p>

<!--more-->


<h1>第二章 Python 语法基础</h1>

<h3>强类型/动态性</h3>

<p>使用<code>type()</code>判断类型：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">12</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">5</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">13</span><span class="p">]:</span><span class="err"> </span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">13</span><span class="p">]:</span><span class="err"> </span><span class="nb">int</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用<code>isinstance()</code>检查实例是否为某种类型：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">23</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">5</span><span class="p">;</span><span class="err"> </span><span class="n">b</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mf">4.5</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">24</span><span class="p">]:</span><span class="err"> </span><span class="nb">isinstance</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="err"> </span><span class="nb">float</span><span class="p">))</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">24</span><span class="p">]:</span><span class="err"> </span><span class="bp">True</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">25</span><span class="p">]:</span><span class="err"> </span><span class="nb">isinstance</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="err"> </span><span class="nb">float</span><span class="p">))</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">25</span><span class="p">]:</span><span class="err"> </span><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用<code>getattr()</code>反射对象的属性：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="s">&#39;foo&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">27</span><span class="p">]:</span><span class="err"> </span><span class="nb">getattr</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;split&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">27</span><span class="p">]:</span><span class="err"> </span><span class="o">&lt;</span><span class="n">function</span><span class="err"> </span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>除此之外可以使用<code>hasattr</code>和<code>setattr</code>判断是否有属性和对属性赋值。</p>

<h3>鸭子类型</h3>

<p>经常地，你可能不关心对象的类型，只关心对象是否有某些方法或用途。这通常被称为“鸭子类型”，来自“走起来像鸭子、叫起来像鸭子，那么它就是鸭子”的说法。例如，你可以通过验证一个对象是否遵循迭代协议，判断它是可迭代的。对于许多对象，这意味着它有一个 <code>__iter__</code> 魔术方法，其它更好的判断方法是使用 iter 函数：</p>

<p>用这个功能编写可以接受多种输入类型的函数。常见的例子是编写一个函数可以接受任意类型的序列（list、tuple、ndarray）或是迭代器。你可先检验对象是否是列表（或是NUmPy数组），如果不是的话，将其转变成列表：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span><span class="err"> </span><span class="ow">not</span><span class="err"> </span><span class="nb">isinstance</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="err"> </span><span class="nb">list</span><span class="p">)</span><span class="err"> </span><span class="ow">and</span><span class="err"> </span><span class="n">isiterable</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
</span><span class='line'> <span class="err">    </span><span class="n">x</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="nb">list</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>禁止字符串内转义序列</h3>

<p>在字符串的单引号前面加r，可以避免字符串内的\产生转义：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">69</span><span class="p">]:</span><span class="err"> </span><span class="n">s</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="s">r&#39;this\has\no\special\characters&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">70</span><span class="p">]:</span><span class="err"> </span><span class="n">s</span> <span class="n">Out</span><span class="p">[</span><span class="mi">70</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;this</span><span class="se">\\</span><span class="s">has</span><span class="se">\\</span><span class="s">no</span><span class="se">\\</span><span class="s">special</span><span class="se">\\</span><span class="s">characters&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>字符串格式化</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">74</span><span class="p">]:</span><span class="err"> </span><span class="n">template</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="s">&#39;{0:.2f} {1:s} are worth US${2:d}&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">75</span><span class="p">]:</span><span class="err"> </span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mf">4.5560</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;Argentine Pesos&#39;</span><span class="p">,</span><span class="err"> </span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">75</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;4.56 Argentine Pesos are worth US$1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这个字符串中:<br/>
{0:.2f} 表示格式化第一个参数为带有两位小数的浮点数。<br/>
{1:s} 表示格式化第二个参数为字符串。  
{2:d} 表示格式化第三个参数为一个整数。</p>

<h3>字符串编码</h3>

<p>使用<code>encode('utf-8')</code>将其转换成 unicode 字节码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">76</span><span class="p">]:</span><span class="err"> </span><span class="n">val</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="s">&quot;español&quot;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">78</span><span class="p">]:</span><span class="err"> </span><span class="n">val_utf8</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">val</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">79</span><span class="p">]:</span><span class="err"> </span><span class="n">val_utf8</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">79</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span><span class="s">&#39;espa</span><span class="se">\xc3\xb1</span><span class="s">ol&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">80</span><span class="p">]:</span><span class="err"> </span><span class="nb">type</span><span class="p">(</span><span class="n">val_utf8</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">80</span><span class="p">]:</span><span class="err"> </span><span class="nb">bytes</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用<code>decode('utf-8')</code>将 unicode 字节码转回 str：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">81</span><span class="p">]:</span><span class="err"> </span><span class="n">val_utf8</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">81</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;español&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以在引号前面加b，表示直接生成unicode字节码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">85</span><span class="p">]:</span><span class="err"> </span><span class="n">bytes_val</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">b</span><span class="s">&#39;this is bytes&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">86</span><span class="p">]:</span><span class="err"> </span><span class="n">bytes_val</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">86</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span><span class="s">&#39;this is bytes&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">87</span><span class="p">]:</span><span class="err"> </span><span class="n">decoded</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">bytes_val</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;utf8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">88</span><span class="p">]:</span><span class="err"> </span><span class="n">decoded</span><span class="err">  </span><span class="c"># this is str (Unicode) now </span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">88</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;this is bytes&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Control Flow</h3>

<h4>连续比较：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">120</span><span class="p">]:</span><span class="err"> </span><span class="mi">4</span><span class="err"> </span><span class="o">&gt;</span><span class="err"> </span><span class="mi">3</span><span class="err"> </span><span class="o">&gt;</span><span class="err"> </span><span class="mi">2</span><span class="err"> </span><span class="o">&gt;</span><span class="err"> </span><span class="mi">1</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">120</span><span class="p">]:</span><span class="err"> </span><span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<h4>range:</h4>

<p>range函数返回一个迭代器，它产生一个均匀分布的整数序列，产生的序列不包括终点。虽然range可以产生任意大的数，但任意时刻耗用的内存却很小。：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">122</span><span class="p">]:</span><span class="err"> </span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">122</span><span class="p">]:</span><span class="err"> </span><span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">123</span><span class="p">]:</span><span class="err"> </span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">123</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="mi">9</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>range的三个参数是（起点，终点，步进）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">124</span><span class="p">]:</span><span class="err"> </span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">20</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">124</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="mi">10</span><span class="p">,</span><span class="err"> </span><span class="mi">12</span><span class="p">,</span><span class="err"> </span><span class="mi">14</span><span class="p">,</span><span class="err"> </span><span class="mi">16</span><span class="p">,</span><span class="err"> </span><span class="mi">18</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">125</span><span class="p">]:</span><span class="err"> </span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">125</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>三元表达式：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">value</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">true</span><span class="o">-</span><span class="n">expr</span><span class="err"> </span><span class="k">if</span><span class="err"> </span><span class="n">condition</span><span class="err"> </span><span class="k">else</span><span class="err"> </span><span class="n">false</span><span class="o">-</span><span class="n">expr</span>
</span></code></pre></td></tr></table></div></figure>


<h1>第三章 Python的数据结构、函数和文件</h1>

<h3>元组</h3>

<p>元组是一个固定长度，不可改变的Python序列对象。创建元组的最简单方式，是用逗号分隔一列值：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>用  tuple 可以将任意序列或迭代器转换成元组，元组可以使用下标访问对象：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">5</span><span class="p">]:</span><span class="err"> </span><span class="nb">tuple</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">])</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">5</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">6</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="nb">tuple</span><span class="p">(</span><span class="s">&#39;string&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">7</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">7</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="s">&#39;s&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;t&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;r&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;i&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;n&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;g&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">8</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">8</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;s&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以用加号运算符将元组串联起来：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">13</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">)</span><span class="err"> </span><span class="o">+</span><span class="err"> </span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">0</span><span class="p">)</span><span class="err"> </span><span class="o">+</span><span class="err"> </span><span class="p">(</span><span class="s">&#39;bar&#39;</span><span class="p">,)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">13</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">0</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>元组乘以一个整数，像列表一样，会将几个元组的复制串联起来；对象本身并没有被复制，只是引用了它。：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">14</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">)</span><span class="err"> </span><span class="o">*</span><span class="err"> </span><span class="mi">4</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">14</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;bar&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>拆分元组</h3>

<p>如果你想将元组赋值给类似元组的变量，Python会试图拆分等号右边的值：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">15</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">16</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="n">c</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">tup</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">17</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">17</span><span class="p">]:</span><span class="err"> </span><span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure>


<p>即使含有元组的元组也会被拆分：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">18</span><span class="p">]:</span><span class="err"> </span><span class="n">tup</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">19</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="err"> </span><span class="n">d</span><span class="p">)</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">tup</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">20</span><span class="p">]:</span><span class="err"> </span><span class="n">d</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">20</span><span class="p">]:</span><span class="err"> </span><span class="mi">7</span>
</span></code></pre></td></tr></table></div></figure>


<p>用这个功能，swap工作变得很简单：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">21</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">22</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">22</span><span class="p">]:</span><span class="err"> </span><span class="mi">1</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">23</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">23</span><span class="p">]:</span><span class="err"> </span><span class="mi">2</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">24</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="n">a</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">25</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">25</span><span class="p">]:</span><span class="err"> </span><span class="mi">2</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">26</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">26</span><span class="p">]:</span><span class="err"> </span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>或是从元组中摘取元素：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">29</span><span class="p">]:</span><span class="err"> </span><span class="n">values</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span> <span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">30</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="o">*</span><span class="n">rest</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">values</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">31</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">31</span><span class="p">]:</span><span class="err"> </span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">32</span><span class="p">]:</span><span class="err"> </span><span class="n">rest</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">32</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">33</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="p">,</span><span class="err"> </span><span class="n">b</span><span class="p">,</span><span class="err"> </span><span class="o">*</span><span class="n">_</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="n">values</span>
</span></code></pre></td></tr></table></div></figure>


<h3>列表</h3>

<p>添加:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">45</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;dwarf&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">46</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">46</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;peekaboo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;baz&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;dwarf&#39;</span><span class="p">]</span> <span class="err"> </span><span class="n">insert</span><span class="err"> 可以在特定的位置插入元素：</span>
</span></code></pre></td></tr></table></div></figure>


<p>插入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">47</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;red&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">48</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">48</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;red&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;peekaboo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;baz&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;dwarf&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>弹出：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">49</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">49</span><span class="p">]:</span><span class="err"> </span><span class="s">&#39;peekaboo&#39;</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">50</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">50</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;red&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;baz&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;dwarf&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除，remove 会先寻找第一个值并除去：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">52</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">52</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;red&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;baz&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;dwarf&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">53</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">54</span><span class="p">]:</span><span class="err"> </span><span class="n">b_list</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">54</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;red&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;baz&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;dwarf&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>串联和组合列表</h3>

<p>与元组类似，可以用加号将两个列表串联起来：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">57</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">]</span><span class="err"> </span><span class="o">+</span><span class="err"> </span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">)]</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">57</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">)]</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果已经定义了一个列表，用 extend 方法可以追加多个元素：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">58</span><span class="p">]:</span><span class="err"> </span><span class="n">x</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">59</span><span class="p">]:</span><span class="err"> </span><span class="n">x</span><span class="o">.</span><span class="n">extend</span><span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">)])</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">60</span><span class="p">]:</span><span class="err"> </span><span class="n">x</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">60</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="bp">None</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foo&#39;</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">8</span><span class="p">,</span><span class="err"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">)]</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过加法将列表串联的计算量较大，因为要新建一个列表，并且要复制对象。用 extend 追加元素，尤其是到一个大列表中，更为可取。</p>

<h3>排序</h3>

<p>你可以用 sort 函数将一个列表原地排序（不创建新的对象）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">61</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">62</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">63</span><span class="p">]:</span><span class="err"> </span><span class="n">a</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">63</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">]</span> <span class="err"> </span>
</span></code></pre></td></tr></table></div></figure>


<p>针对key进行排序。例如，我们可以按长度对字符串进行排序：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">64</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;saw&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;small&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;He&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foxes&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;six&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">65</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="nb">len</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">66</span><span class="p">]:</span><span class="err"> </span><span class="n">b</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">66</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="s">&#39;He&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;saw&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;six&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;small&#39;</span><span class="p">,</span><span class="err"> </span><span class="s">&#39;foxes&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>bisect 模块支持二分查找，和向已排序的列表插入值。bisect.bisect 可以找到插入值后仍保证排序的位置，bisect.insort 是向这个位置插入值：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">67</span><span class="p">]:</span><span class="err"> </span><span class="n">import</span><span class="err"> </span><span class="n">bisect</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">68</span><span class="p">]:</span><span class="err"> </span><span class="n">c</span><span class="err"> </span><span class="o">=</span><span class="err"> </span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">]</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">69</span><span class="p">]:</span><span class="err"> </span><span class="n">bisect</span><span class="o">.</span><span class="n">bisect</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">69</span><span class="p">]:</span><span class="err"> </span><span class="mi">4</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">70</span><span class="p">]:</span><span class="err"> </span><span class="n">bisect</span><span class="o">.</span><span class="n">bisect</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="err"> </span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">70</span><span class="p">]:</span><span class="err"> </span><span class="mi">6</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">71</span><span class="p">]:</span><span class="err"> </span><span class="n">bisect</span><span class="o">.</span><span class="n">insort</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'><span class="n">In</span><span class="err"> </span><span class="p">[</span><span class="mi">72</span><span class="p">]:</span><span class="err"> </span><span class="n">c</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">72</span><span class="p">]:</span><span class="err"> </span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">2</span><span class="p">,</span><span class="err"> </span><span class="mi">3</span><span class="p">,</span><span class="err"> </span><span class="mi">4</span><span class="p">,</span><span class="err"> </span><span class="mi">6</span><span class="p">,</span><span class="err"> </span><span class="mi">7</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>切片</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone Popover above iOS9]]></title>
    <link href="http://openfibers.github.io/blog/2019/01/29/iphone-popover-above-ios9/"/>
    <updated>2019-01-29T16:44:13+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/01/29/iphone-popover-above-ios9</id>
    <content type="html"><![CDATA[<p>直接上图上代码。。。</p>

<p><img class="left" src="http://openfibers.github.io/images/blog/iphone_popover/iphone_popover.jpg"></p>

<p>OTPopoverMenuViewController.h:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">OTPopoverMenuViewController</span> : <span class="bp">UIViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">presentInController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'>                 <span class="nf">sourceView:</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">presentInController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'>              <span class="nf">barButtonItem:</span><span class="p">(</span><span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="p">)</span><span class="nv">barButtonItem</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>OTPopoverMenuViewController.m:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;OTPopoverMenuViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">OTPopoverMenuViewController</span> <span class="p">()</span> <span class="o">&lt;</span><span class="n">UIPopoverPresentationControllerDelegate</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">OTPopoverMenuViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithNibName:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibNameOrNil</span> <span class="nf">bundle:</span><span class="p">(</span><span class="bp">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibBundleOrNil</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="nl">initWithNibName</span><span class="p">:</span><span class="n">nibNameOrNil</span> <span class="nl">bundle</span><span class="p">:</span><span class="n">nibBundleOrNil</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">modalPresentationStyle</span> <span class="o">=</span> <span class="n">UIModalPresentationPopover</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">UIPopoverPresentationController</span> <span class="o">*</span><span class="n">popController</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">popoverPresentationController</span><span class="p">];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">preferredContentSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">);</span>
</span><span class='line'>        <span class="n">popController</span><span class="p">.</span><span class="n">permittedArrowDirections</span> <span class="o">=</span> <span class="n">UIPopoverArrowDirectionUp</span><span class="p">;</span>
</span><span class='line'>        <span class="n">popController</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="n">initUI</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">presentInController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'>                 <span class="nf">sourceView:</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">UIPopoverPresentationController</span> <span class="o">*</span><span class="n">popController</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">popoverPresentationController</span><span class="p">];</span>
</span><span class='line'>    <span class="n">popController</span><span class="p">.</span><span class="n">sourceView</span> <span class="o">=</span> <span class="n">view</span><span class="p">;</span>
</span><span class='line'>    <span class="n">popController</span><span class="p">.</span><span class="n">sourceRect</span> <span class="o">=</span> <span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">controller</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="nb">self</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">presentInController:</span><span class="p">(</span><span class="bp">UIViewController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'>              <span class="nf">barButtonItem:</span><span class="p">(</span><span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="p">)</span><span class="nv">barButtonItem</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">UIPopoverPresentationController</span> <span class="o">*</span><span class="n">popController</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">popoverPresentationController</span><span class="p">];</span>
</span><span class='line'>    <span class="n">popController</span><span class="p">.</span><span class="n">barButtonItem</span> <span class="o">=</span> <span class="n">barButtonItem</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">controller</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="nb">self</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">UIModalPresentationStyle</span><span class="p">)</span><span class="nf">adaptivePresentationStyleForPresentationController:</span><span class="p">(</span><span class="n">UIPresentationController</span> <span class="o">*</span><span class="p">)</span><span class="nv">controller</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">UIModalPresentationNone</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initUI</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">OTPopoverMenuViewController</span> <span class="o">*</span><span class="n">controller</span> <span class="o">=</span> <span class="p">[[</span><span class="n">OTPopoverMenuViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">controller</span> <span class="nl">presentInController</span><span class="p">:</span><span class="nb">self</span> <span class="nl">sourceView</span><span class="p">:</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'><span class="c1">//或</span>
</span><span class='line'><span class="p">[</span><span class="n">controller</span> <span class="nl">presentInController</span><span class="p">:</span><span class="nb">self</span> <span class="nl">barButtonItem</span><span class="p">:</span><span class="n">barButtonItem</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[评价基金性能的常用指标]]></title>
    <link href="http://openfibers.github.io/blog/2019/01/15/funds-perfomance-measures/"/>
    <updated>2019-01-15T12:19:56+08:00</updated>
    <id>http://openfibers.github.io/blog/2019/01/15/funds-perfomance-measures</id>
    <content type="html"><![CDATA[<h3>最大回撤（Max Draw Down）</h3>

<p>最大回撤为：在选定周期内任一历史时点往后推，产品净值走到最低点时的收益率回撤幅度的最大值。</p>

<p>其计算的时间复杂度是O(n)的。有些O(n<sup>2</sup>)的写法比较业余。</p>

<p>python:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">get_max_draw_down</span><span class="p">(</span><span class="n">in_list</span><span class="p">:</span> <span class="nb">list</span><span class="p">):</span>
</span><span class='line'>    <span class="n">dd_list</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">max_so_far</span> <span class="o">=</span> <span class="n">in_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">in_list</span><span class="p">)):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">in_list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">max_so_far</span><span class="p">:</span>
</span><span class='line'>            <span class="n">dd</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="n">dd_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dd</span><span class="p">)</span>
</span><span class='line'>            <span class="n">max_so_far</span> <span class="o">=</span> <span class="n">in_list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">current</span> <span class="o">=</span> <span class="n">in_list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>            <span class="n">dd</span> <span class="o">=</span> <span class="p">(</span><span class="n">max_so_far</span> <span class="o">-</span> <span class="n">current</span><span class="p">)</span> <span class="o">/</span> <span class="n">max_so_far</span>
</span><span class='line'>            <span class="n">dd_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">dd</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mdd</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">dd_list</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mdd</span>
</span></code></pre></td></tr></table></div></figure>


<h3>夏普比率(Sharpe Ratio)</h3>

<p>评价单位承担的风险可以取得多少正向收益。在同种时间跨度下，越高越好。</p>

<h4>计算方法：</h4>

<ul>
<li>平均收益率超过无风险收益率的部分除以收益率的标准差。</li>
<li>如果通过高频夏普率（比如1d）推测低频夏普率(一般是年)，若每年有255个交易日，一般是再乘上根号下255。像币圈高频夏普率（4h）推导年，则是再乘上根号下 365 * 24 / 4。

<h4>缺陷：</h4></li>
<li>由于标准差是正值，所以无法区分上行风险和下行风险。

<h4>优点：</h4></li>
<li>国内外知名度高。</li>
</ul>


<p>附两个知乎的讲解链接：<br/>
<a href="https://www.zhihu.com/question/264210987/answer/421333614">夏普率越高越好吗？ - 石川的回答 - 知乎</a><br/>
<a href="https://www.zhihu.com/question/38316057/answer/75848881">求问基金风险指标的计算：夏普比率，索提诺比率，阿尔法系数等？ - 财小鲸之秦岭的回答 - 知乎</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sharpe_ratio</span><span class="p">(</span><span class="n">returns</span><span class="p">,</span> <span class="n">risk_free_rate</span><span class="o">=</span><span class="mf">0.0</span><span class="p">):</span>
</span><span class='line'>    <span class="n">mean</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">returns</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">mean</span> <span class="o">-</span> <span class="n">risk_free_rate</span><span class="p">)</span> <span class="o">/</span> <span class="n">numpy</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">returns</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中 returns 为每条 ohlc 的变化率，比如 [0.02, 0.03, -0.03, &hellip;]<br/>
risk_free_rate 为每条 ohlc 的无风险收益率。比如okex余币宝年化1%，传入的是4小时returns，这里应该传入 1% / (365 * 24 / 4)</p>

<p>可以通过历史净值列表（equity）生成 returns：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">returns_from_equity</span><span class="p">(</span><span class="n">in_equity</span><span class="p">:</span> <span class="nb">list</span><span class="p">):</span>
</span><span class='line'>    <span class="n">returns_np</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">in_equity</span><span class="p">)</span>
</span><span class='line'>    <span class="n">returns_np</span> <span class="o">=</span> <span class="n">returns_np</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">/</span> <span class="n">returns_np</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="n">returns_np</span> <span class="o">=</span> <span class="n">returns_np</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">returns_np</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后把返回值代入下一步计算。</p>

<!--more-->


<h3>索提诺比率(Sortino Ratio)</h3>

<p>计算方法和夏普率相似，但是用低于目标收益率的收益率或亏损时的收益率所计算出的“下行标准差”取代了正常的标准差。和夏普比率一样，在同种时间跨度下，越高越好。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">math</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">lpm</span><span class="p">(</span><span class="n">returns</span><span class="p">,</span> <span class="n">threshold</span><span class="p">,</span> <span class="n">order</span><span class="p">):</span>
</span><span class='line'>    <span class="n">threshold_array</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">returns</span><span class="p">))</span>
</span><span class='line'>    <span class="n">threshold_array</span><span class="o">.</span><span class="n">fill</span><span class="p">(</span><span class="n">threshold</span><span class="p">)</span>
</span><span class='line'>    <span class="n">diff</span> <span class="o">=</span> <span class="n">threshold_array</span> <span class="o">-</span> <span class="n">returns</span>
</span><span class='line'>    <span class="n">diff</span> <span class="o">=</span> <span class="n">diff</span><span class="o">.</span><span class="n">clip</span><span class="p">(</span><span class="nb">min</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">diff</span> <span class="o">**</span> <span class="n">order</span><span class="p">)</span> <span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">returns</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sortino_ratio</span><span class="p">(</span><span class="n">returns</span><span class="p">,</span> <span class="n">risk_free_rate</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span> <span class="n">target</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>    <span class="n">mean</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">returns</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">mean</span> <span class="o">-</span> <span class="n">risk_free_rate</span><span class="p">)</span> <span class="o">/</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">lpm</span><span class="p">(</span><span class="n">returns</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>更多参数 python 计算，参考：</p>

<p><a href="http://www.turingfinance.com/computational-investing-with-python-week-one/">Measures of Risk-adjusted Return</a></p>

<p>Over</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python talib 的一些基础用法]]></title>
    <link href="http://openfibers.github.io/blog/2018/12/31/python-talib-basics/"/>
    <updated>2018-12-31T14:27:06+08:00</updated>
    <id>http://openfibers.github.io/blog/2018/12/31/python-talib-basics</id>
    <content type="html"><![CDATA[<p>首先还是导入一些业界标准库：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">talib</span> <span class="kn">as</span> <span class="nn">ta</span>
</span></code></pre></td></tr></table></div></figure>


<h3>计算RSI</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">close</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">bars</span><span class="o">.</span><span class="n">close</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">ta</span><span class="o">.</span><span class="n">RSI</span><span class="p">(</span><span class="n">close</span><span class="p">))</span>  <span class="c"># 默认15根bars</span>
</span></code></pre></td></tr></table></div></figure>


<h3>计算MA</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ta</span><span class="o">.</span><span class="n">MA</span><span class="p">(</span><span class="n">close</span><span class="p">)</span>  <span class="c"># 默认 30 根 bars，即 MA30</span>
</span></code></pre></td></tr></table></div></figure>


<h3>设置计算用的时长，比如计算 MA5</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ta</span><span class="o">.</span><span class="n">MA</span><span class="p">(</span><span class="n">close</span><span class="p">,</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>计算 EMA11 和 EMA22</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ta</span><span class="o">.</span><span class="n">EMA</span><span class="p">(</span><span class="n">close</span><span class="p">,</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">11</span><span class="p">)</span>
</span><span class='line'><span class="n">ta</span><span class="o">.</span><span class="n">EMA</span><span class="p">(</span><span class="n">close</span><span class="p">,</span> <span class="n">timeperiod</span><span class="o">=</span><span class="mi">22</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>全部指标和方法列表</h3>

<p><a href="http://mrjbq7.github.io/ta-lib/funcs.html">http://mrjbq7.github.io/ta-lib/funcs.html</a></p>
]]></content>
  </entry>
  
</feed>
